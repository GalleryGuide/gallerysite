<?php

use Drupal\Core\Link;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gallerysite_form_taxonomy_term_artists_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  // Remove votes open/closed.
  $form['field_rating']['#access'] = FALSE;

  // Remove relations section.
  $form['relations']['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gallerysite_form_node_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Remove revision log fields
  $form['revision_information']['#access'] = FALSE;

  // Remove preview functionality.
  $form['actions']['preview']['#access'] = FALSE;

  // Remove votes open/closed.
  $form['field_rating']['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gallerysite_form_node_gallery_delete_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Prevent deletion if the gallery has any exhibitions.

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gallerysite_form_contact_message_contact_us_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Remove preview option from contact form.
  $form['actions']['preview']['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gallerysite_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Hide the content form options.
  $form['contact']['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gallerysite_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Hide the content form options.
  $form['contact']['#access'] = FALSE;
  
  $link_options = ['absolute' => TRUE];

  $terms_nid = 6345;
  $terms_link = Link::createFromRoute('Terms and Conditions', 'entity.node.canonical', ['node' => $terms_nid], $link_options);

  $privacy_nid = 6343;
  $privacy_link = Link::createFromRoute('Privacy Policy', 'entity.node.canonical', ['node' => $privacy_nid], $link_options);

  $form['terms']['#markup'] = '<p>By creating an account you agree to the ' . $terms_link->toString() . ' and ' . $privacy_link->toString() . '.</p>';
}

function gallerysite_default_image() {

  $connection = Database::getConnection();
  
  $query = $connection->select('file_managed', 'fm')
    ->condition('uri', 'public://imagefield_default_images/anon_large.gif')
    ->fields('fm', array('fid', 'uuid'))
    ->execute();
  
//  $connection->update('file_managed', 'fm')
//    ->condition('fid')

  
}

/**
 * Implements hook_cron().
 */
function gallerysite_cron() {
  // Get all promoted exhibitions which have already finished.
  $date = date('Y-m-d', REQUEST_TIME);
  $query = \Drupal::entityQuery('node')
    ->condition('type', 'exhibition')
    ->condition('status', 1)
    ->condition('promote', 1)
    ->condition('field_date_to.value', $date, '<');
  
  $nids = $query->execute();
  
  // Unpromote the nodes.
  $nodes = \Drupal\node\Entity\Node::loadMultiple($nids);
  foreach ($nodes as $node) {
    $node->set('promote', 0);
    $node->save();
  }
  
  // Truncate tables that grow too large.
  $connection = \Drupal::database();
  $tables = array(
    'cache_render', 
    'cache_dynamic_page_cache',
  );
  foreach ($tables as $table) {
    $connection->delete($table)->execute();
  }
}
